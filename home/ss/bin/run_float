#!/bin/bash

# Runs command as floating e.g. from a terminal on a tiled/fair tag
# to just see for a moment and close without cluttering the tag
#
# Accepts -m and -t <tag> in any order (but have to be first)
# to launch not maximized and to move to tag <tag> after opening
# if a program supported startup notifications (lxterminal and
# xterm do not)

MAXIMIZED='true'
TAG='' # currently focused one by default

count=2
while [[ $count -gt 0 ]]; do
    key=$1
    case $key in
        -m)
        MAXIMIZED='false'
        shift # past argument
        ;;
        -t)
        TAG=$2
        shift # past argument
        shift # past value
        ;;
    esac
    count=$count-1
done

if [ $# -le 0 ]; then
    echo "Usage: $(basename $0) [-m] [-t float2] your command with arguments"
    echo
    echo "Launches specified command like "gvim ~/.xinitrc". By default on the same tag, maximized and floating."
    echo
    echo "-m and -t float2 sutff can be used only IN THE BEGINNING of the script parameters in whatever order"
    echo "to launch command as maximized=false in the tag=float2 in this example. They are both optional."
    echo
    echo "The reason for this hack to exist is if you have a succesfully creafted layout like tile/fair"
    echo "and you just want to see something for just a second in a float way, you can use this script and you can"
    echo "then safely close it"
    echo
    echo "Examples:"
    echo 
    echo "$(basename $0) gvim ~/.xinitrc - will open maximized gvim as floating on the currently focused tag"
    echo "$(basename $0) -m gvim ~/.xinitrc - same as previous but gvim will not be maximized"
    echo "$(basename $0) -m -t float2 gvim ~/.xinitrc - same as previous but the gvim will go to tag 'float2' once started"
    echo "$(basename $0) -t float2 -m gvim ~/.xinitrc - same as the above, just orders of -t/-m is reversed"
    echo
    echo "Please note that no quotes are needed for the command part. It just has to be the last (after -t, -m)"

    exit 1
fi


if [ $# -gt 0 ] ;then
    cmd=$*
    if [ -z $TAG ]; then
        awesome-client "require('awful.spawn')('$cmd', { floating = true, maximized = $MAXIMIZED })"
    else
        awesome-client "require('awful.spawn')('$cmd', { floating = true, maximized = $MAXIMIZED, tag = '$TAG' })"
    fi
fi

exit 0

