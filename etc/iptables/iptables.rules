*filter

# Allow all outgoing, but drop incoming and forwarding packets by default
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [4:245]

# Custom per-protocol chains
:TCP - [0:0]
:UDP - [0:0]
:ICMP - [0:0]

# pass packets for opened connections
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# allow connections to loopback
-A INPUT -i lo -j ACCEPT
# Drop invalid packets
-A INPUT -m conntrack --ctstate INVALID -j DROP

# Pass traffic to protocol-specific chains
## Only allow new connections (established and related should already be handled)
## For TCP, additionally only allow new SYN packets since that is the only valid
## method for establishing a new TCP connection
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
-A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP
# (only pings, not all icmp)
#-A INPUT -p icmp -m conntrack --ctstate NEW -j ICMP
-A INPUT -p icmp -m icmp --icmp-type 8 -m conntrack --ctstate NEW -j ICMP

# Reject anything that's fallen through to this point
## Try to be protocol-specific w/ rejection message
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset
-A INPUT -j REJECT --reject-with icmp-proto-unreachable

# Allow NFSv4
#-A TCP -p tcp -m tcp --dport 111 -j ACCEPT
#-A TCP -p tcp -m tcp --dport 2049 -j ACCEPT
#-A TCP -p tcp -m tcp --dport 20048 -j ACCEPT
#-A UDP -p udp -m udp --dport 111 -j ACCEPT
#-A UDP -p udp -m udp --dport 2049 -j ACCEPT
#-A UDP -p udp -m udp --dport 20048 -j ACCEPT

# Allow TFTP
-A UDP -p udp -m udp --dport 69 -j ACCEPT

COMMIT


*raw
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT

*security
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT

*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT

